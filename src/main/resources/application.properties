debug=true

# Set the application name to be used in the OTLP exporter
spring.application.name=otel-demo-app

# 1. OpenTelemetry configuration (traces, metrics, logs)
otel.exporter.otlp.protocol=grpc
otel.exporter.otlp.endpoint=http://localhost:4317
# Enable micrometer instrumentation, needed to get metrics to OTLP
otel.instrumentation.micrometer.enabled=true
# not mandatory, but can be used to enable controller telemetry
otel.instrumentation.common.experimental.controller-telemetry.enabled=true

# 2. Provide tags for traces and metrics
# OTEL default tags: service, service.name, service.instance.id, deployment.environment
# Traces tags
otel.resource.attributes.service=${spring.application.name:demo-app}
otel.resource.attributes.service.name=module-1-name
otel.resource.attributes.service.instance.id=${SERVICE_INSTANCE_ID:node-1}
otel.resource.attributes.deployment.environment=${SERVICE_ENV:dev}
# Metrics tags
management.metrics.tags.service=${spring.application.name:demo-app}
management.metrics.tags.service.name=module-1-name
management.metrics.tags.service.instance.id=${SERVICE_INSTANCE_ID:node-1}
management.metrics.tags.deployment.environment=${SERVICE_ENV:dev}
# TODO: update above correct values for production

# 3. Sampling configuration
# TODO: update what is actually needed
# In production we want to sample traces to avoid performance issues
# 1.0 => 100% sampling, check what is the best value for prod use case
#otel.traces.sampler=traceidratio
#otel.traces.sampler.arg=0.02

# 4. Provide list of metrics you want to enable
# TODO: update what is actually needed
management.metrics.enable.all=true
# Or select which metrics you want to enable
#management.metrics.enable.tomcat=true
#management.metrics.enable.jvm=true
#management.metrics.enable.process=true
#management.metrics.enable.hikaricp=true
#management.metrics.enable.system=true
#management.metrics.enable.jdbc=true
#management.metrics.enable.http=true

# Expose actuator endpoints (optional)
# TODO: update what is actually needed
management.endpoints.web.exposure.include=*

# Expose info endpoint actuator/info (optional)
# TODO: update what is actually needed
management.info.build.enabled=true
management.info.env.enabled=true
management.info.defaults.enabled=true
management.info.git.mode=full
management.info.java.enabled=true
management.info.os.enabled=true