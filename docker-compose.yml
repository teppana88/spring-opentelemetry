services:

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.116.1
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
      - --set=service.telemetry.logs.level=debug
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "8889:8889" # Prometheus exporter metrics
#      - "8088:8088" # Splunk HEC metrics
      - "13133:13133" # health_check extension
      - "1888:1888" # health_check extension
      - "55679:55679" # zpages web UI
#      - "4318:4318" # OTLP http receiver
    depends_on:
      - loki
      - tempo

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    restart: always
    ports:
      - "4317"  # otlp grpc
      - "3200"  # tempo as grafana datasource

  loki:
    container_name: loki
    image: grafana/loki:latest
    volumes:
      - ./docker/loki/loki.yml:/etc/loki/loki.yml
    command: -config.file=/etc/loki/loki.yml
    restart: always
    ports:
      - "3100"

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
#      - --enable-feature=native-histograms
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      - tempo
